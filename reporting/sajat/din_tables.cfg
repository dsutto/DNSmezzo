[all_packets]
template = "all_packets.tmpl.xhtml"
output = "all_packets.html"
query = "select * from  %%(dns_packets_tablename)s LIMIT %(limit)s"
limit = 100
data = {limit: limit}
keys = ('id', 'file', 'rank', 'date', 'length', 'added', 'src_address', 'dst_address', 'protocol', 'src_port', 'dst_port', 'query', 'query_id', 'opcode', 'rcode', 'aa', 'tc', 'rd', 'ra', 'qclass', 'qname', 'qtype', 'edns0_size', 'do_dnssec', 'ancount', 'nscount', 'arcount', 'registered_domain', 'lowercase_qname')
contextname = "data"
[index_hu]
template = "index_hu.tmpl.xhtml"
output = "index_hu.html"
query = "select count(*) as darab from %%(dns_packets_tablename)s where query and qname='index.hu' LIMIT %(limit)s"
limit = 100
data = {limit: limit}
keys = ('darab', ' ')
contextname = "data"
[punycode]
template = "punycode.tmpl.xhtml"
output = "punycode.html"
query = "select qname, count(*) as darab from %%(dns_packets_tablename)s where query and lowercase_qname like '%%(percent_sign)sxn--%%(percent_sign)s' group by qname order by darab desc, qname asc LIMIT %(limit)s"
limit = 100
data = {limit: limit}
keys = ('qname', 'darab')
contextname = "data"
[networks]
template = "networks.tmpl.xhtml"
output = "networks.html"
query = "select network(set_masklen(src_address, 24)) as network, count(*) from %%(dns_packets_tablename)s where query group by network order by 2 desc LIMIT %(limit)s"
limit = 100
data = {limit: limit}
keys = ('network', 'count')
contextname = "data"
[networks_4]
template = "networks_4.tmpl.xhtml"
output = "networks_4.html"
query = "select network(set_masklen(src_address, 24)) as network, count(*) from %%(dns_packets_tablename)s where query and family(src_address) = 4 group by network order by 2 desc LIMIT %(limit)s"
limit = 100
data = {limit: limit}
keys = ('network', 'count')
contextname = "data"
[non_IN_queries]
template = "non_IN_queries.tmpl.xhtml"
output = "non_IN_queries.html"
query = "select date, length, src_address, dst_address, protocol, src_port, dst_port, query_id, opcode, aa, tc, rd, ra, qclass, qname, qtype, edns0_size, do_dnssec, ancount, nscount, arcount from %%(dns_packets_tablename)s where qclass != 1 and query  LIMIT %(limit)s"
limit = 100
data = {limit: limit}
keys = ('date', 'length', 'src_address', 'dst_address', 'protocol', 'src_port', 'dst_port', 'query_id', 'opcode', 'aa', 'tc', 'rd', 'ra', 'qclass', 'qname', 'qtype', 'edns0_size', 'do_dnssec', 'ancount', 'nscount', 'arcount')
contextname = "data"
[non_IN_stat]
template = "non_IN_stat.tmpl.xhtml"
output = "non_IN_stat.html"
query = "select lowercase_qname as lqname, qclass, count(*) from %%(dns_packets_tablename)s where qclass != 1 and query group by lqname, qclass order by 2 desc LIMIT %(limit)s;"
limit = 100
data = {limit: limit}
keys = ('lqname', 'qclass', 'count')
contextname = "data"
[distrib_between_servers]
template = "distrib_between_servers.tmpl.xhtml"
output = "distrib_between_servers.html"
query = "select src_address, sum(case dst_address when '193.239.149.3' then 1 else 0 end) b_hu, sum(case dst_address when '193.239.148.48' then 1 else 0 end) ns_nic_hu_4, sum(case dst_address when '2001:738:4:8000::48' then 1 else 0 end) ns_nic_hu_6, sum(case dst_address when '194.0.25.11' then 1 else 0 end) e_hu_4, sum(case dst_address when '2001:67c:1bc::11' then 1 else 0 end) e_hu_6, count(*) osszes                                            from %%(dns_packets_tablename)s where query group by src_address order by osszes desc LIMIT %(limit)s;"
limit = 1000
data = {'limit': limit}
keys = ('src_address', 'b_hu', 'ns_nic_hu_4', 'ns_nic_hu_6', 'e_hu_4', 'e_hu_6', 'osszes')
contextname = "data"
[edns0_buffer_size]
template = "edns0_buffer_size.tmpl.xhtml"
output = "edns0_buffer_size.html"
query = "select edns0_size, count(*) from %%(dns_packets_tablename)s where query group by edns0_size order by edns0_size asc LIMIT %(limit)s;"
limit = 100
data = {'limit': limit}
keys = ('edns0_size', 'count')
contextname = "data"

[rcodes]
template = "rcodes.tmpl.xhtml"
output = "rcodes.html"
query = "select rcode, count(*) from %%(dns_packets_tablename)s where not query group by rcode order by rcode asc LIMIT %(limit)s;"
limit = 100
data = {'limit': limit}
keys = ('rcode', 'count')
contextname = "data"

